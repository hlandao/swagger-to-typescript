swagger: '2.0'
info:
  version: '1.0.0'
  title: Iris Payments API
  description:
   |
   This document describes the entire IRIS services Rest API.
  contact:
    name: T24 Api Team
    email: liran@ldb.co.il
    url: http://ldb.co.il
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: localhost:3020
basePath: /api-iris/api.svc/IL0010001
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
security:
  - basicAuth: []
paths:
  /p2p/customerByMobile/{phoneNumber}:
    get:
      tags:
        - Customers
      description: Get customer details by phone number
      x-swagger-router-controller: payments-customers
      operationId: getCustomerByMobile
      produces:
        - application/json
      parameters:
        - name: phoneNumber
          in: path
          description: The phone number of the customer
          required: true
          type: string
      responses:
        '200':
          description: Got the customer details
          schema:
            $ref: '#/definitions/GetCustomerByMobileEmbeded'
  /p2p/getProf/{customerId}/profile:
    get:
      tags:
        - Customers
      description: Get the profile of a P2P customer
      x-swagger-router-controller: payments-customers
      operationId: getCustomerProfile
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: The id of the customer
          required: true
          type: string
      responses:
        '200':
          description: Got the profile of the customer sucessfully
          schema:
            $ref: '#/definitions/CustomerProfile'
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/errorModel"
  /p2p/verifycustomer/profile:
      get:
        tags:
          - Customers
        description: Verify P2P customer for reset password
        x-swagger-router-controller: payments-customers
        operationId: p2pVerifyCustomer
        produces:
          - application/json
        parameters:
        - name: verifyCustomerRequest
          in: body
          description: The verify customer request for reset password
          required: true
          schema:
            $ref: '#/definitions/verifyCustomerRequest'
        responses:
          '200':
            description: Got the profile of the customer sucessfully
            schema:
              $ref: '#/definitions/CustomerProfile'
          default:
            description: Unexpected Error
            schema:
              $ref: "#/definitions/errorModel"
  /customers/{customerId}/request:
    post:
      tags:
        - Payments
      description: Request a payment from counterparties
      x-swagger-router-controller: payments
      operationId: requestPayment
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that requests the payment
          required: true
          type: string
        - name: requestPaymentRequest
          in: body
          description: The request payment request
          required: true
          schema:
            $ref: '#/definitions/RequestPaymentRequest'
      responses:
        200:
          description: The payment request was created successfully
          schema:
            $ref: '#/definitions/CreatePaymentRequestResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/errorModel"
  /customers/{customerId}/pay:
    post:
      tags:
        - Payments
      description: Create a payments for the given customer.
      x-swagger-router-controller: payments
      operationId: createPayment
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that creates the payment.
          required: true
          type: string
        - name: paymentRequest
          in: body
          description: The create payment request.
          required: true
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
      responses:
        '200':
          description: The credit guard token matching this credir card
          schema:
            $ref: "#/definitions/CreatePaymentResponse"
  /p2p/customer:
    post:
      tags:
        - Payments
      description: Createa a new P2P customer
      x-swagger-router-controller: payments-customers
      operationId: createCustomer
      produces:
        - application/json
      parameters:
        - name: customerDetails
          in: body
          description: The details of the P2P customer to create
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerRequest'
      responses:
        '200':
          description: Success in creating the customer
          schema:
            $ref: '#/definitions/CreateCustomerResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /customers/{customerId}/changePassword:
    post:
      tags:
      - Customers
      summary: Change authenticated user password
      description: Change authenticated user password
      operationId: changePassword
      x-swagger-router-controller: payments-customers
      parameters:
      - name: customerId
        in: path
        description: The id of the customer that creates the payment.
        required: true
        type: string
      - name: changePasswordRequest
        in: body
        description: The new password request
        required: true
        schema:
          $ref: '#/definitions/changePasswordRequest'
      responses:
        200:
          description: "Successful password change"
        default:
          description: "Unexpected error"
          schema:
            $ref: '#/definitions/errorModel'
  /customers/{phoneNumber}/resetPassword:
    post:
      tags:
      - Customers
      summary: Reset password for unauthenticated user who forgot password
      description: Reset password for unauthenticated user who forgot password
      operationId: resetPassword
      x-swagger-router-controller: payments-customers
      parameters:
      - name: phoneNumber
        in: path
        description: The phone number of the customer that reset the password
        required: true
        type: string
      - name: resetPasswordRequest
        in: body
        description: The reset password request
        required: true
        schema:
          $ref: '#/definitions/resetPasswordRequest'
      responses:
        200:
          description: "Successful password reset"
        default:
          description: "Unexpected error"
          schema:
            $ref: '#/definitions/errorModel'
  /p2p/customer/{customerId}/historyList:
    get:
      tags:
      - History
      summary: Get conversations history for customer
      description: Get conversations history for customer to display all customer conversations in a list before digging in
      operationId: getConversationsHistory
      x-swagger-router-controller: history
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that creates the payment.
          required: true
          type: string
      responses:
        200:
          description: "list of last transaction for each customer counterparty conversations history"
          schema:
            $ref: "#/definitions/GetHistoryResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: '#/definitions/errorModel'
  /p2p/customer/{customerId}/history/{counterpartyId}:
    get:
      tags:
      - History
      summary: Get transaction history for counter party
      description: Get transaction history for customer to display all customer transaction in a list after digging in
      operationId: getCounterpartyHistory
      x-swagger-router-controller: history
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that creates the payment.
          required: true
          type: string
        - name: counterpartyId
          in: path
          description: The counterpartys id
          required: true
          type: string
      responses:
        200:
          description: "list of last transaction for each customer counterparty conversations history"
          schema:
            $ref: "#/definitions/GetCounterpartyHistoryResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: '#/definitions/errorModel'
  /p2p/ben/{customerId}/beneficiary/{beneficiaryId}:
    get:
      tags:
        - Beneficiaries
      summary: Get beneficiary details for customer and beneficiary id
      operationId: getBeneficiaryDetails
      x-swagger-router-controller: beneficiaries
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that creates the payment.
          required: true
          type: string
        - name: beneficiaryId
          in: path
          description: The id of the beneficiary that we want to fetch.
          required: true
          type: string
      responses:
        200:
          description: Beneficiary bank details and full name
          schema:
            $ref: "#/definitions/BeneficiaryDetailsResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  CreatePaymentRequestResponse:
    type: object
    required:
      - customerId
      - DataId
    properties:
      customerId:
        type: string
      BookDate:
        type: string
      CptyAcctNo:
        type: string
      CptyBnk:
        type: string
      CptyBrch:
        type: string
      CptyFullName:
        type: string
      DataId:
        type: string
      Frequency:
        type: string
      Id:
        type: string
      NoOfPayments:
        type: string
      P2pCustId:
        type: string
      P2pMobile:
        type: string
      StatusCode:
        type: string
      StatusDescrip:
        type: string
      TransFreeText:
        type: string
      TransReason:
        type: string
      TransRefId:
        type: string
      UnrestrTokenAmt:
        type: string
      ValueDate:
        type: string
  GetCustomerByMobileEmbeded:
      type: object
      properties:
        _embedded:
          $ref: '#/definitions/GetCustomerByMobileItem'
  GetCustomerByMobileItem:
      type: object
      properties:
        item:
          type: array
          items:
            $ref: '#/definitions/GetCustomerByMobileResponse'
  GetCustomerByMobileResponse:
    type: object
    properties:
      P2PCustomerId:
        type: string
      CustomerId:
        type: string
      FullName:
        type: string
      orionFullName:
        type: string
      orionProfileImage:
        type: string
  CustomerProfile:
    type: object
    required:
      - fullName
      - phoneNumber
      - bankNumber
      - branchNumber
      - accountNumber
      - creditCardLast4Digits
    properties:
      fullName:
        type: string
      phoneNumber:
        type: string
      bankNumber:
        type: string
      branchNumber:
        type: string
      accountNumber:
        type: string
      creditCardLast4Digits:
        type: string
  CreateCustomerResponse:
    type: object
    required:
      - BlmP2pCustomer
      - StatusCode
      - StatusDescr
    properties:
      BlmP2pCustomer:
        type: string
      StatusCode:
        type: integer
        format: int32
      StatusDescr:
        type: string
  CreatePaymentRequest:
    type: object
    required:
      - Amount
      - TransReason
    properties:
      Amount:
        type: string
        description: Transaction amount
      UnrestrToken:
        type: string
        description: UnrestrToken
      TransReason:
        type: string
        description: Transaction reason.
      TransFreeText:
        type: string
        description: Transaction free text (aka message).
      P2pMobile:
        type: string
        description: Counterparty mobile phone.
      P2pCustId:
        type: string
        description: Counterparty customer ID.
      BenefId:
        type: string
        description: Counterparty beneficiary ID.
      CptyAcctNo:
        type: string
        description: Account number when creating bank wire payment.
      CptyBnk:
        type: string
        description: Bank number when creating bank wire payment.
      CptyBrch:
        type: string
        description: Branch number when creating bank wire payment.
      CptyFullName:
        type: string
        description: Beneficiary name when creating bank wire payment.
  CreatePaymentResponse:
    allOf:
      - $ref: '#/definitions/IrisResponse'
      - type: object
        required:
          - customerId
          - DataId
        properties:
          customerId:
            type: string
          BookDate:
            type: string
          CptyAcctNo:
            type: string
          CptyBnk:
            type: string
          CptyBrch:
            type: string
          CptyFullName:
            type: string
          DataId:
            type: string
          Frequency:
            type: string
          Id:
            type: string
          NoOfPayments:
            type: string
          P2pCustId:
            type: string
          P2pMobile:
            type: string
          StatusCode:
            type: string
          StatusDescrip:
            type: string
          TransFreeText:
            type: string
          TransReason:
            type: string
          TransRefId:
            type: string
          UnrestrTokenAmt:
            type: string
          ValueDate:
            type: string
  CreateCustomerRequest:
    type: object
    required:
      - MobileNumber
      - CustFullName
      - CustNatId
      - BankSortCode
      - FullAcctNo
      - CcToken
      - CcExpiryDate
      - CcFirstSix
      - CcLastFour
      - TermsAccepted
      - TacVersion
      - CustLink
    properties:
      MobileNumber:
        type: string
      CustFullName:
        type: string
      CustNatId:
        type: string
        description: Customer National ID number
      BankSortCode:
        type: string
        description: Bank and branch number combined
      FullAcctNo:
        type: string
      CcToken:
        type: string
      CcExpiryDate:
        type: string
      CcFirstSix:
        type: string
      CcLastFour:
        type: string
      TermsAccepted:
        type: string
      TacVersion:
        type: string
      customerId:
        type: string
      CustLink:
        type: string
        description: excisting LDB customer ID
      BlmP2pCustomer:
        type: string
  changePasswordRequest:
    type: object
    required:
      - oldPassword
      - newPassword
    properties:
      oldPassword:
        type: string
      newPassword:
        type: string
  RequestPaymentRequest:
    type: object
    required:
      - payersList
    properties:
      payersList:
        type: array
        items:
          $ref: '#/definitions/Payer'
      Amount:
        type: number
        format: double
      transactionFreeText:
        type: string
  Payer:
    type: object
    required:
      - MobileNumber
    properties:
      MobileNumber:
        type: string
  GetHistoryResponse:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/HistoryItems'
  HistoryItems:
    type: object
    properties:
      item:
        type: array
        items:
          $ref: '#/definitions/Conversation'
  Conversation:
    type: object
    required:
      - BenefId
      - FullName
      - MobileNo
      - Amount
      - OperationType
      - P2pReceiver
      - TransactionDate
    properties:
      BenefId:
        type: string
      FullName:
        type: string
      MobileNo:
        type: string
        description: benef mobile number
      OperationType:
        $ref: '#/definitions/OperationType'
      Amount:
        type: string
      P2pReceiver:
        type: string
        description: P2P ID of counterparty if exist, if not, empty string
      TransactionDate:
        type: string
        format: dateTime
      PrimaryKey:
        type: string
        description: Temenos clusterfuck
      Sender:
        type: string
        description: Temenos clusterfuck
  OperationType:
    type: string
    enum: ["SENT_PAYMENT", "RECEIVED_PAYMENT", "SENT_REQUEST", "RECEIVED_REQUEST"]
  OperationStatus:
    type: string
    enum: ["IN PROGRESS","FINAL", "PENDING CUSTOMER DECLARATION","REJECTED","FUTURE","PAID","PENDING"]
  GetCounterpartyHistoryResponse:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/CounterpartyHistoryItems'
  CounterpartyHistoryItems:
    type: object
    properties:
      item:
        type: array
        items:
          $ref: '#/definitions/Message'
  Message:
    type: object
    required:
      - OperationDateTime
      - Amount
      - OperationType
      - OperationStatus
      - TxnReference
    properties:
      Amount:
        type: string
      OperationType:
        $ref: '#/definitions/OperationType'
      PaymentDetailsMvGroup:
        type: string
        description: Reason of the transaction (used to be called reason)
      FreeTextMvGroup:
        type: string
        description: free text
      OperationDateTime:
        type: string
        format: dateTime
      OperationStatus:
        $ref: '#/definitions/OperationStatus'
      ExposerDate:
        type: string
        format: dateTime
        description: The value date. the date when the trasaction will be final and processed
      TxnReference:
        type: string
        description: Asmahta number
  verifyCustomerRequest:
    type: object
    required:
      - P2pCustId
      - P2pMobile
      - P2pAcctNo
      - P2pBankNo
      - P2pBranchNo
      - P2pIdNo
    properties:
      P2pCustId:
        type: string
        description: customer id
      P2pMobile:
        type: string
        description: Customer mobile number
      P2pAcctNo:
        type: string
        description: Customer bank account number
      P2pBankNo:
        type: string
        description: Customer bank number
      P2pBranchNo:
        type: string
        description: Customer branch number
      P2pIdNo:
        type: string
        description: Customer national Id number
  IrisResponse:
    type: object
    required:
      - links
    properties:
      links:
        type: object
        properties:
          self:
            type: object
            properties:
              href:
                type: string
  BeneficiaryDetailsResponse:
    allOf:
      - $ref: '#/definitions/IrisResponse'
      - type: object
        required:
          - AccountNo
          - BankNo
          - BeneficiaryID
          - BranchNo
          - FullName
          - OwningCustomer
        properties:
          AccountNo:
            type: string
          BankNo:
            type: string
          BeneficiaryID:
            type: string
          BranchNo:
            type: string
          FullName:
            type: string
          OwningCustomer:
            type: string
  BankDetails:
    type: object
    properties:
      accountNumber:
        type: string
      branchNumber:
        type: string
      bankNumber:
        type: string
  resetPasswordRequest:
    type: object
    required:
      - bankDetails
      - creditCardDetails
      - socialSecurityId
      - newPassword
    properties:
      bankDetails:
        $ref: "#/definitions/BankDetails"
      creditCardDetails:
        $ref: "#/definitions/FullCreditCardDetails"
      socialSecurityId:
        type: string
      newPassword:
        type: string
  FullCreditCardDetails:
    type: object
    properties:
      expirationDate:
        type: string
      number:
        type: string
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string